const express=require("express"),cors=require("cors"),{initializeApp:a,applicationDefault:b}=require("firebase-admin/app"),{getFirestore:c}=require("firebase-admin/firestore"),{json:d}=require("express"),app=express(),port=process.env.PORT||8080;app.use(cors()),app.use(d()),a({credential:b()});const db=c();function checkIt(a,b,c){let d=new RegExp(c);return!!(""!==a&&a.length<=b&&d.test(a))}function createRes(a,b){return JSON.stringify({code:a,message:b})}app.post("/add",async(c,b)=>{let a=c.body;if(checkIt(a.word,25,"^[A-Z]*$")&&checkIt(a.hint,100,"^[a-zA-Z].*[s.]*$")){let d={hint:a.hint};await db.collection("questions").doc(a.word).set(d),b.end(createRes("100",`${a.word} Added To Database!`))}else b.end(createRes("101","Invalid Inputs!"))}),app.post("/remove",async(c,b)=>{let a=c.body;checkIt(a.question,25,"^[A-Z]*$")?(await db.collection("questions").doc(a.question).delete(),b.end(createRes("300",`${a.question} Deleted From Database!`))):b.end(createRes("301","Invalid Inputs!"))}),app.get("/questions",async(d,a)=>{let b=await db.collection("questions").get(),c=[];if(b.empty)a.end(createRes("201",JSON.stringify(c)));else{let e={word:"",hint:""};b.forEach(a=>{e={word:a.id,hint:a.data().hint},c.push(e)}),a.end(createRes("200",JSON.stringify(c)))}}),app.listen(port,()=>{console.log(`Server Started at Port: ${port}`)})